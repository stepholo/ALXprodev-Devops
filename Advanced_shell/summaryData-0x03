#!/bin/bash
# This script is used to create a report that summarizes data for multiple PokÃ©mon.
# Usage: ./summaryData-0x03

pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

summary_csv="pokemon_report.csv"
error_file="errors.txt"

# Clear old files
> "$summary_csv"
> "$error_file"


# Create the summary CSV file and add headers
echo "Name,Height (m),Weight (kg)" > "$summary_csv"

for pokeman in "${pokemon_list[@]}"; do
    file_path="${pokeman}.json"

    # Check if the file exists
    if [ ! -f "$file_path" ]; then
        echo "Error: $file_path does not exist." >> "$error_file"
        continue
    fi

    # Extract values using jq
    name=$(jq -r '.name' "$file_path")
    height=$(jq -r '.height' "$file_path")
    weight=$(jq -r '.weight' "$file_path")

    # Convert height and weight to meters and kilograms
    height_m=$(echo "$height" | awk '{printf "%.1f", $1 / 10}')
    weight_kg=$(echo "$weight" | awk '{printf "%.0f", $1 / 10}')

    # Capitalise the names
    name_cap=$(echo "$name" | sed 's/.*/\u&/')

    # Append the data to the summary CSV file
    echo "$name_cap,$height_m,$weight_kg" >> "$summary_csv"
done


# Use awk to calculate the averages (skipping the header)
averages=$(awk -F, 'NR > 1 {height+=$2; weight+=$3; count++}
    END {
        if (count > 0) {
            printf "Average Height: %.1f m\nAverage Weight: %.1f kg\n", height/count, weight/count
        } else {
            print "No data to calculate averages."
        }
    }')

echo "/n/n$averages" >> "$summary_csv"